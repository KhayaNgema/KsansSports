@model IEnumerable<MyField.Models.SportNews>

@{
    ViewData["Title"] = "To Be Modified Sport News";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";
}


<br />
@await Html.PartialAsync("_HomeButton")
<h4 class="text-center">To Be Modified Sport News</h4>
<br />
<div class="table-responsive">
    @if (Model.Any())
    {
        <table class="table table-striped table-borderless">
            <thead>
                <tr style="color:white;background-color: #324260; white-space: nowrap;">
                    <th>
                        Image
                    </th>
                    <th>
                        Heading
                    </th>
                    <th>
                        AuthoredBy
                    </th>  
                    <th>
                        Modified DateTime
                    </th>
                    <th>
                        ModifiedBy
                    </th>
                    <th>
                        Body
                    </th>
                    <th>
                        Status
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="ellipsis">
                        <td>
                            <div class="news-image-container" style="width:90px; height:90px;">
                                <img src="~/@item.NewsImage " alt="News image" class="club-badge-image" style="height:100%; width:100%; object-fit:cover;" />
                            </div>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NewsHeading)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AuthoredBy.FirstName)                 @Html.DisplayFor(modelItem => item.AuthoredBy.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ModifiedBy.FirstName)                 @Html.DisplayFor(modelItem => item.ModifiedBy.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ModifiedDateTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NewsBody)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NewsStatus)
                        </td>
                        <td class="text-right">
                            <div class="dropdown">
                                <button class="btn btn-primary btn-sm dropdown-toggle manual-toggle" type="button">
                                    Actions
                                </button>
                                <div class="dropdown-menu dropdown-menu-end">
                                    <a class="dropdown-item" href="@Url.Action("ModifyFixture", "Fixtures", new { newsId = item.NewsId })">
                                        <i class="fas fa-pen" style="color: #28a745;"></i> View profile
                                    </a>
                                    <a class="dropdown-item" href="@Url.Action("FixtureDetailsBackOffice", "Fixtures", new { newsId = item.NewsId })">
                                        <i class="fas fa-info-circle" style="color: blue;"></i> Deactivate
                                    </a>
                                    <a class="dropdown-item" href="@Url.Action("PostponeFixture", "Fixtures", new { newsId = item.NewsId })">
                                        <i class="fas fa-clock" style="color: #dc3545;"></i> Suspend
                                    </a>
                                    <a class="dropdown-item" href="@Url.Action("DeleteFixture", "Fixtures", new {newsId = item.NewsId  })">
                                        <i class="fas fa-trash" style="color: red;"></i> Delete
                                    </a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-center" style="margin-top: 20vh; margin-bottom: 20vh;">There are no sport news to be modified at a moment</p>
    }

</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.6.0/js/bootstrap.bundle.min.js"></script>
<script>
    $(document).ready(function () {
        $("#searchInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $(".clubs-table tbody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });

    $(document).on('click', '.dropdown-toggle', function (event) {
        event.stopPropagation();
        var $this = $(this);
        $('.dropdown-menu').not($this.next('.dropdown-menu')).removeClass('show');
        var $menu = $this.next('.dropdown-menu');
        $menu.toggleClass('show');

        var offset = $this.offset();
        var menuHeight = $menu.outerHeight();
        var menuWidth = $menu.outerWidth();
        var windowHeight = $(window).height();
        var windowWidth = $(window).width();
        var scrollTop = $(window).scrollTop();
        var scrollLeft = $(window).scrollLeft();

        var spaceBelow = windowHeight - (offset.top - scrollTop + $this.outerHeight());
        var spaceAbove = offset.top - scrollTop;
        var spaceRight = windowWidth - (offset.left - scrollLeft + $this.outerWidth());
        var spaceLeft = offset.left - scrollLeft;

        if (spaceBelow >= menuHeight || spaceBelow >= spaceAbove) {
            $menu.css('top', '100%');
            $menu.css('bottom', 'auto');
        } else {
            $menu.css('top', 'auto');
            $menu.css('bottom', '100%');
        }

        if (spaceRight >= menuWidth || spaceRight >= spaceLeft) {
            $menu.css('left', '0');
            $menu.css('right', 'auto');
        } else {
            $menu.css('left', 'auto');
            $menu.css('right', '0');
        }
    });

    $(document).on('click', function (event) {
        var $target = $(event.target);
        if (!$target.closest('.dropdown-menu').length && !$target.closest('.dropdown-toggle').length) {
            $('.dropdown-menu').removeClass('show');
        }
    });

    setTimeout(function () {
        document.getElementById("tempDataMessage").style.display = "none";
    }, 5000);
</script>
