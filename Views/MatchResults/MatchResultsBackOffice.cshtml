@model IEnumerable<MyField.Models.MatchResults>

@{
    ViewData["Title"] = ViewBag.CurrentSeason +" Match Results";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";
}

<style>
    .dropdown-menu {
        position: absolute;
        z-index: 1000;
        display: none;
        max-width: 200px; /* Adjust width as needed */
        overflow-y: auto;
        max-height: calc(100vh - 200px); /* Adjust max height as needed */
    }

        .dropdown-menu.show {
            display: block;
        }
</style>

<br />
@await Html.PartialAsync("_BackButton")
<h4 class="text-center">@ViewBag.CurrentSeason Season Match Results</h4>
<br />
@if (Model.Any()) 
{
<div class="fixtures-search-create-container" style="margin-bottom: 10px;">
    <div class="row">
        <div class="col-12 col-lg-4 d-flex justify-content-between align-items-center">
            <div class="create-button">
                <a href="@Url.Action("Fixtures", "Fixtures")" class="btn btn-outline-primary btn-create" style="white-space: nowrap;">
                    <i class="fas fa-plus"></i> Create new
                </a>
            </div>
        </div>
    </div>
</div>


<br />
@if (TempData["Message"] != null)
{
    <div id="tempDataMessage" class="alert @(TempData["Message"].ToString().Contains("successfully") ? "alert-success" : "alert-danger")" role="alert">
        @TempData["Message"]
        <span class="close" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </span>
    </div>
}
<div class="table-responsive">
        <table class="table table-striped table-borderless">
            <thead>
                <tr style="color:white;background-color: #324260; white-space: nowrap!important;">
                    <th>Home</th>
                    <th>Goals</th>
                    <th>-</th>
                    <th>Goals</th>
                    <th>Away</th>
                    @if (User.IsInRole("System Administrator") || User.IsInRole("Sport Administrator"))
                    {
                        <th>CreatedBy</th>
                        <th>Created DateTime</th>
                        <th>ModifiedBy</th>
                        <th>Modified DateTime</th>
                    }
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr style="white-space: nowrap!important;">
                        <td>
                            @if (item.HomeTeam != null)
                            {
                                <img src="~/@item.HomeTeam.ClubBadge" alt="@item.HomeTeam.ClubBadge" class="club-badge-image" style="max-width:50px; max-height: 50px;" /> @Html.DisplayFor(modelItem => item.HomeTeam.ClubName)
                            }
                        </td>
                        <td style="text-align:end;">@Html.DisplayFor(modelItem => item.HomeTeamScore)</td>
                        <td>-</td>
                        <td>@Html.DisplayFor(modelItem => item.AwayTeamScore)</td>
                        <td>
                            @if (item.AwayTeam != null)
                            {
                                <img src="~/@item.AwayTeam.ClubBadge" alt="@item.AwayTeam.ClubBadge" class="club-badge-image" style="max-width:50px; max-height: 50px;" /> @Html.DisplayFor(modelItem => item.AwayTeam.ClubName)
                            }
                        </td>
                        @if (User.IsInRole("System Administrator") || User.IsInRole("Sport Administrator"))
                        {
                            <td>@Html.DisplayFor(modelItem => item.CreatedBy.FirstName) @Html.DisplayFor(modelItem => item.CreatedBy.LastName)</td>
                            <td>@Html.DisplayFor(modelItem => item.CreatedDateTime)</td>
                            <td>@Html.DisplayFor(modelItem => item.ModifiedBy.FirstName) @Html.DisplayFor(modelItem => item.ModifiedBy.LastName)</td>
                            <td>@Html.DisplayFor(modelItem => item.ModifiedDateTime)</td>
                        }
                        <td class="text-right">
                            <div class="dropdown">
                                <button class="btn btn-primary btn-sm dropdown-toggle manual-toggle" type="button">
                                    Actions
                                </button>
                                <div class="dropdown-menu dropdown-menu-end">
                                    <a class="dropdown-item" href="@Url.Action("ModifyFixture", "Fixtures", new { id = item.FixtureId })">
                                        <i class="fas fa-pen" style="color: #28a745;"></i> Update
                                    </a>
                                    <a class="dropdown-item" href="@Url.Action("FixtureDetailsBackOffice", "Fixtures", new { id = item.FixtureId })">
                                        <i class="fas fa-info-circle" style="color: blue;"></i> Details
                                    </a>
                                    <a class="dropdown-item" href="@Url.Action("InterruptFixture", "Fixtures", new { id = item.FixtureId })">
                                        <i class="fas fa-pause" style="color: #dc3545;"></i> Interrupt
                                    </a>
                                    <a class="dropdown-item" href="@Url.Action("PostponeFixture", "Fixtures", new { id = item.FixtureId })">
                                        <i class="fas fa-clock" style="color: #dc3545;"></i> Postpone
                                    </a>
                                    <a class="dropdown-item" href="@Url.Action("DeleteFixture", "Fixtures", new { id = item.FixtureId })">
                                        <i class="fas fa-trash" style="color: red;"></i> Delete
                                    </a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
</div>
}
else
{
    <div class="d-flex justify-content-center align-items-center" style="height: 60vh; flex-direction: column;">
        <p class="text-center">There are no results yet.</p>
        <div class="create-button mt-3">
            <a href="@Url.Action("Fixtures", "Fixtures")" class="btn btn-outline-primary btn-create" style="white-space: nowrap;">
                <i class="fas fa-plus"></i> Create new
            </a>
        </div>
    </div>
}


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.6.0/js/bootstrap.bundle.min.js"></script>
<script>
    $(document).ready(function () {
        // Toggle dropdown when dropdown button is clicked
        $('.manual-toggle').on('click', function () {
            var $dropdownMenu = $(this).next('.dropdown-menu');
            $('.dropdown-menu').removeClass('show');
            $dropdownMenu.toggleClass('show');

            // Adjust dropdown position
            var $button = $(this);
            var offset = $button.offset();
            var menuWidth = $dropdownMenu.outerWidth();
            var menuHeight = $dropdownMenu.outerHeight();
            var buttonHeight = $button.outerHeight();
            var viewportWidth = $(window).width();
            var viewportHeight = $(window).height();

            // Check if dropdown goes out of viewport on the right
            if (offset.left + menuWidth > viewportWidth) {
                $dropdownMenu.css({
                    left: 'auto',
                    right: 0
                });
            } else {
                $dropdownMenu.css({
                    left: 0,
                    right: 'auto'
                });
            }

            // Check if dropdown goes out of viewport on the bottom
            if (offset.top + buttonHeight + menuHeight > viewportHeight) {
                $dropdownMenu.css({
                    top: 'auto',
                    bottom: buttonHeight
                });
            } else {
                $dropdownMenu.css({
                    top: buttonHeight,
                    bottom: 'auto'
                });
            }
        });

        // Close dropdown on document click
        $(document).on('click', function (e) {
            if (!$(e.target).closest('.dropdown').length) {
                $('.dropdown-menu').removeClass('show');
            }
        });
    });

    setTimeout(function () {
        document.getElementById("tempDataMessage").style.display = "none";
    }, 5000);
</script>
