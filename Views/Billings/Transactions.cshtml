@model IEnumerable<MyField.Models.Payment>

@{
    ViewData["Title"] = "Payments";
    Layout = "~/Views/Shared/_PagesLayout.cshtml";
}

<br />
@await Html.PartialAsync("_HomeButton")
<h4 class="text-center">Transactions</h4>
<br />

<div class="d-flex flex-column mb-2">
    <div class="d-flex flex-nowrap mb-2" style="overflow-x: auto;">
        <div class="col-auto p-0 me-2">
            <label for="searchByDetails" class="d-block">Search:</label>
            <input type="text" id="searchByDetails" class="form-control" placeholder="Search by Details" style="width: 180px;">
        </div>
        <div class="col-auto p-0 me-2">
            <label for="searchByStartDate" class="d-block">Start Date:</label>
            <input type="date" id="searchByStartDate" class="form-control" style="width: 180px;">
        </div>
        <div class="col-auto p-0 me-2">
            <label for="searchByEndDate" class="d-block">End Date:</label>
            <input type="date" id="searchByEndDate" class="form-control" style="width: 180px;">
        </div>
    </div>
</div>

<br />
<div id="noResultsMessage" class="d-none text-center" style="display: flex; justify-content: center; align-items: center; height: 200px;">
    <p>There are no transactions for your search</p>
</div>
<div class="table-responsive" id="paymentsTableContainer">
    <table class="table table-striped table-borderless">
        <thead>
            <tr style="color:white;background-color: #324260; white-space: nowrap;">
                <th>
                    Reference no.
                </th>
                <th>
                    Payment Made By
                </th>
                <th>
                    Email Address
                </th>
                <th>
                    Cellphone no.
                </th>
                <th>
                    Payment Date
                </th>
                <th>
                    Amount Paid
                </th>
                <th>
                    Payment Method
                </th>
                <th>
                    Payment Status
                </th>
                <th>
                    More
                </th>
            </tr>
        </thead>
        <tbody id="paymentsTable">
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReferenceNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaymentMadeBy.FirstName) @Html.DisplayFor(modelItem => item.PaymentMadeBy.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaymentMadeBy.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaymentMadeBy.PhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaymentDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AmountPaid)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaymentMethod)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        <a class="btn btn-outline-primary" asp-controller="Billings" asp-action="PaymentDetails" asp-route-paymentId="@item.PaymentId"><i class="fa fa-info-circle"></i> Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var inputDetails = document.getElementById('searchByDetails');
        var inputStartDate = document.getElementById('searchByStartDate');
        var inputEndDate = document.getElementById('searchByEndDate');

        inputDetails.addEventListener('keyup', filterTable);
        inputStartDate.addEventListener('change', filterTable);
        inputEndDate.addEventListener('change', filterTable);

        var current_date = new Date();
        var year = current_date.getFullYear();
        var month = (current_date.getMonth() + 1).toString().padStart(2, '0');
        var day = current_date.getDate().toString().padStart(2, '0');
        inputStartDate.value = `${year}-${month}-${day}`;
        inputEndDate.value = `${year}-${month}-${day}`;
        filterTable();
    });

    function filterTable() {
        var inputDetails = document.getElementById('searchByDetails');
        var filterDetails = inputDetails.value.toUpperCase();
        var inputStartDate = document.getElementById('searchByStartDate');
        var inputEndDate = document.getElementById('searchByEndDate');
        var filterStartDate = inputStartDate.value;
        var filterEndDate = inputEndDate.value;

        var table = document.querySelector("#paymentsTable");
        var tr = table.getElementsByTagName("tr");
        var visibleRowCount = 0;

        for (var i = 0; i < tr.length; i++) {
            var tdDetails = tr[i].getElementsByTagName("td")[1]; // Column for Payment Made By (adjust index if needed)
            var tdDate = tr[i].getElementsByTagName("td")[4]; // Column for Payment Date (adjust index if needed)

            if (tdDetails && tdDate) {
                var detailsText = tdDetails.textContent || tdDetails.innerText;
                var paymentDateStr = tdDate.textContent || tdDate.innerText;
                var paymentDateTime = new Date(paymentDateStr).getTime();
                var startDateTime = filterStartDate ? new Date(filterStartDate + "T00:00:00").getTime() : 0;
                var endDateTime = filterEndDate ? new Date(filterEndDate + "T23:59:59").getTime() : Infinity;

                if ((paymentDateTime >= startDateTime) &&
                    (paymentDateTime <= endDateTime) &&
                    (filterDetails === "" || detailsText.toUpperCase().indexOf(filterDetails) > -1)) {
                    tr[i].style.display = "";
                    visibleRowCount++;
                } else {
                    tr[i].style.display = "none";
                }
            }
        }

        if (visibleRowCount === 0) {
            document.getElementById('noResultsMessage').classList.remove('d-none');
            document.getElementById('paymentsTableContainer').style.display = 'none';
        } else {
            document.getElementById('noResultsMessage').classList.add('d-none');
            document.getElementById('paymentsTableContainer').style.display = 'block';
        }
    }
</script>
