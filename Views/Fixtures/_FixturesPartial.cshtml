@model IEnumerable<MyField.Models.Fixture>

<br />
<div class="fixtures-match-container" style="width:100%; padding-right:10px; padding-left:10px;">
    @if(Model.Any())
    {
        <div class="row">
            @foreach (var group in Model.OrderBy(item => item.KickOffDate).GroupBy(item => item.KickOffDate))
            {
                <div class="col-12 mb-2">
                    <h5 class="text-center date-background">@group.Key.ToString("dddd, MMMM d, yyyy")</h5>
                </div>

                @foreach (var item in group)
                {
                    <div class="col-12 mb-2">
                        <div class="card h-100 d-flex flex-column justify-content-center position-relative">
                            <div class="card-body text-center">
                                <p class="card-text">
                                    @if (item.HomeTeam != null && item.AwayTeam != null)
                                    {
                                        <span class="@((item.FixtureStatus == FixtureStatus.Postponed) ? "text-decoration-line-through" : "")">
                                            @Html.DisplayFor(modelItem => item.HomeTeam.ClubName)
                                            <img src="~/@item.HomeTeam.ClubBadge" alt="@item.HomeTeam.ClubName" class="club-badge-image" />
                                            <span class="font-weight-bold">&nbsp;VS&nbsp;</span>
                                            <img src="~/@item.AwayTeam.ClubBadge" alt="@item.AwayTeam.ClubName" class="club-badge-image" />
                                            @Html.DisplayFor(modelItem => item.AwayTeam.ClubName)
                                        </span>
                                    }
                                </p>
                                <p class="card-text">
                                    <span class="@((item.FixtureStatus == FixtureStatus.Postponed) ? "text-decoration-line-through" : "")">
                                        @item.KickOffDate.ToString("ddd, dd/MM/yyy"), @item.KickOffTime.ToString("HH:mm") -  @Html.DisplayFor(modelItem => item.Location)
                                    </span>
                                </p>
                                @if (item.FixtureStatus == FixtureStatus.Postponed)
                                {
                                    <p class="card-text text-primary">
                                        @item.FixtureStatus
                                    </p>
                                }
                                else if (item.FixtureStatus == FixtureStatus.Interrupted)
                                {
                                    <p class="card-text text-danger">
                                        @item.FixtureStatus
                                    </p>
                                }
                                else
                                {

                                }
                            </div>
                            <div class="card-footer">
                                <div class="d-flex justify-content-end">
                                    <a asp-action="FixtureDetailsFans" asp-route-FixtureId="@item.FixtureId" class="btn btn-sm">
                                        <i class="fas fa-arrow-right"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    }
    else
    {
        <p class="text-center" style="margin-top: 20vh; margin-bottom: 20vh;">There are no fixtures for this season yet.</p>
    }
</div>
